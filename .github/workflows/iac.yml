name: iac

on:
  push:
  workflow_dispatch:

env:
  TF_VAR_git_repo: ${{ github.event.repository.html_url }}
  TF_VAR_github_org_token: ${{ secrets.ORG_ADMIN_TOKEN }}
  TF_DESTROY: false

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: af-south-1
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=$GITHUB_REPOSITORY.tfstate" \
            -backend-config="region=af-south-1" \
            -input=false
        working-directory: iac

      - name: Terraform Validate
        run: terraform validate
        working-directory: iac

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=plan.out
        working-directory: iac

      - name: Save plan as JSON
        run: terraform show -json plan.out > plan.json
        working-directory: iac

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: |
            iac/plan.out
            iac/plan.json

  terraform-apply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.target_branch == 'main')
    needs: terraform-plan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Terraform Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: iac

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: af-south-1
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=$GITHUB_REPOSITORY.tfstate" \
            -backend-config="region=af-south-1" \
            -input=false
        working-directory: iac

      - name: Terraform Apply
        run: terraform apply -auto-approve plan.out
        working-directory: iac

  terraform-destroy:
    name: "Terraform destroy"
    runs-on: ubuntu-latest
    if: ${{ env.TF_DESTROY }}
    needs: terraform-apply
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: af-south-1
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=$GITHUB_REPOSITORY.tfstate" \
            -backend-config="region=af-south-1" \
            -input=false
        working-directory: iac

      - name: Terraform Destroy
        run: terraform apply -destroy -auto-approve
        working-directory: iac

